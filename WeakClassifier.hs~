module Trainer(
      train
) where
    
import System.Directory (getDirectoryContents)
import System.FilePath.Posix ((</>))

import Primitives
import GreyImage (load)
import Window (windowWidth, windowHeight)

-- | Train a strong classifier from directory of tests
-- containing two directories (bad & true).
train directory = do
    putStrLn "Loading tests ..."
    bad <- loadTests $ directory </> "bad"
    putStrLn "\tbad/ loaded"
    good <- loadTests $ directory </> "good"
    putStrLn "\tgood/ loaded"
    
    
    
  where
    loadTests dir = do
        paths <- getDirectoryContents $ dir
        mapM (loadTest . (dir </>)) (excludeHidden paths)
        
    loadTest path =
        load path $ Just $ Size windowWidth windowHeight
        
    excludeHidden = filter $ ((/=) '.') . head